#!/usr/bin/env python3
"""
–¢–µ—Å—Ç TavilyClient —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –≤—ã–±–æ—Ä–∞ –¥–≤–∏–∂–∫–æ–≤
"""
from tavily_client import TavilyClient

def test_tavily_client_engines():
    """–¢–µ—Å—Ç TavilyClient —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ –Ω–∞–±–æ—Ä–∞–º–∏ –¥–≤–∏–∂–∫–æ–≤"""
    
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ TavilyClient —Å –≤—ã–±–æ—Ä–æ–º –¥–≤–∏–∂–∫–æ–≤")
    print("=" * 50)
    
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç (–Ω–µ –ø—Ä–∏–≤—è–∑–∞–Ω –∫ —Ä–∞–±–æ—Ç–∞—é—â–µ–º—É —Å–µ—Ä–≤–µ—Ä—É)
    client = TavilyClient(api_key="test-key", searxng_url="http://localhost:8013")
    
    test_cases = [
        {
            "query": "machine learning research",
            "engines": None,  # –£–º–Ω—ã–π –≤—ã–±–æ—Ä
            "description": "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –≤—ã–±–æ—Ä (—É–º–Ω—ã–π)"
        },
        {
            "query": "python programming tutorial", 
            "engines": "reddit,stackoverflow",
            "description": "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –≤—ã–±–æ—Ä (reddit,stackoverflow)"
        },
        {
            "query": "Einstein biography",
            "engines": "wikipedia,wikidata",
            "description": "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –≤—ã–±–æ—Ä (wikipedia,wikidata)"
        },
        {
            "query": "population statistics",
            "engines": "wikidata",
            "description": "–û–¥–∏–Ω –¥–≤–∏–∂–æ–∫ (wikidata)"
        }
    ]
    
    for case in test_cases:
        print(f"\nüìù –ó–∞–ø—Ä–æ—Å: '{case['query']}'")
        print(f"üîß –°—Ç—Ä–∞—Ç–µ–≥–∏—è: {case['description']}")
        
        try:
            # –ó–¥–µ—Å—å –º—ã —Ç–æ–ª—å–∫–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º–µ—Ç–æ–¥ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
            # –ù–µ –≤—ã–ø–æ–ª–Ω—è–µ–º —Ä–µ–∞–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å, —Ç–∞–∫ –∫–∞–∫ —Å–µ—Ä–≤–µ—Ä –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
            print(f"‚úÖ –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø—Ä–∏–Ω—è—Ç—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
            
            if case['engines'] is None:
                print(f"üß† –ë—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω —É–º–Ω—ã–π –≤—ã–±–æ—Ä –¥–≤–∏–∂–∫–æ–≤")
            else:
                print(f"üë§ –ë—É–¥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω—ã –¥–≤–∏–∂–∫–∏: {case['engines']}")
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    print("\n‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!")
    print("\nüí° –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:")
    print("# –£–º–Ω—ã–π –≤—ã–±–æ—Ä (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)")
    print('client.search("quantum physics research")')
    print("\n# –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –≤—ã–±–æ—Ä –¥–≤–∏–∂–∫–æ–≤")
    print('client.search("python tutorial", engines="reddit,stackoverflow")')
    print("\n# –û–¥–∏–Ω –¥–≤–∏–∂–æ–∫")
    print('client.search("population data", engines="wikidata")')

if __name__ == "__main__":
    test_tavily_client_engines()