#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —É–º–Ω–æ–≥–æ –≤—ã–±–æ—Ä–∞ –¥–≤–∏–∂–∫–æ–≤
"""
from main import get_smart_engines

def test_smart_engine_selection():
    """–¢–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–∏ —É–º–Ω–æ–≥–æ –≤—ã–±–æ—Ä–∞ –¥–≤–∏–∂–∫–æ–≤"""
    
    print("üß† –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–º–Ω–æ–≥–æ –≤—ã–±–æ—Ä–∞ –¥–≤–∏–∂–∫–æ–≤")
    print("=" * 50)
    
    test_cases = [
        # –ù–∞—É—á–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã
        ("machine learning research paper", "–Ω–∞—É—á–Ω—ã–µ"),
        ("quantum physics study", "–Ω–∞—É—á–Ω—ã–µ"),
        ("–∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –Ω–µ–π—Ä–æ–Ω–Ω—ã—Ö —Å–µ—Ç–µ–π", "–Ω–∞—É—á–Ω—ã–µ"),
        
        # –ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ
        ("python programming tutorial", "–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ"),
        ("javascript code example", "–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ"),
        ("–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ go", "–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ"),
        
        # –ë–∏–æ–≥—Ä–∞—Ñ–∏–∏ –∏ –∏—Å—Ç–æ—Ä–∏—è
        ("Napoleon Bonaparte biography", "–±–∏–æ–≥—Ä–∞—Ñ–∏—è/–∏—Å—Ç–æ—Ä–∏—è"),
        ("history of Roman Empire", "–±–∏–æ–≥—Ä–∞—Ñ–∏—è/–∏—Å—Ç–æ—Ä–∏—è"),
        ("–±–∏–æ–≥—Ä–∞—Ñ–∏—è –ü—É—à–∫–∏–Ω–∞", "–±–∏–æ–≥—Ä–∞—Ñ–∏—è/–∏—Å—Ç–æ—Ä–∏—è"),
        
        # –§–∞–∫—Ç—ã –∏ –¥–∞–Ω–Ω—ã–µ
        ("population of Tokyo statistics", "—Ñ–∞–∫—Ç—ã/–¥–∞–Ω–Ω—ã–µ"),
        ("GDP data by country", "—Ñ–∞–∫—Ç—ã/–¥–∞–Ω–Ω—ã–µ"),
        ("–Ω–∞—Å–µ–ª–µ–Ω–∏–µ –†–æ—Å—Å–∏–∏", "—Ñ–∞–∫—Ç—ã/–¥–∞–Ω–Ω—ã–µ"),
        
        # –û–±—â–∏–µ –∑–∞–ø—Ä–æ—Å—ã
        ("best restaurants in Paris", "–æ–±—â–∏–µ"),
        ("weather forecast", "–æ–±—â–∏–µ"),
        ("–ª—É—á—à–∏–µ —Ñ–∏–ª—å–º—ã 2024", "–æ–±—â–∏–µ"),
    ]
    
    for query, category in test_cases:
        engines = get_smart_engines(query)
        print(f"üìù –ó–∞–ø—Ä–æ—Å: '{query}'")
        print(f"üè∑Ô∏è  –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {category}")
        print(f"üîç –î–≤–∏–∂–∫–∏: {engines}")
        print()
    
    print("‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–≤
    print("\nüéØ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–≤:")
    
    scientific = get_smart_engines("quantum research paper")
    programming = get_smart_engines("python programming")
    biography = get_smart_engines("Einstein biography")
    facts = get_smart_engines("population statistics")
    general = get_smart_engines("best pizza recipe")
    
    assert "arxiv" in scientific.split(",")[:2], "ArXiv –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–µ –¥–ª—è –Ω–∞—É—á–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤"
    assert "reddit" in programming.split(",")[:2], "Reddit –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–µ –¥–ª—è –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è"
    assert "wikipedia" in biography.split(",")[:2], "Wikipedia –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –≤ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–µ –¥–ª—è –±–∏–æ–≥—Ä–∞—Ñ–∏–π"
    assert "wikidata" in facts.split(",")[:2], "Wikidata –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –≤ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–µ –¥–ª—è —Ñ–∞–∫—Ç–æ–≤/–¥–∞–Ω–Ω—ã—Ö"
    
    print("‚úÖ –í—Å–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")

if __name__ == "__main__":
    test_smart_engine_selection()